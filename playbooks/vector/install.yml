---
- name: Install and configure beat packages
  hosts: "{{ monitoring_clients | default('monitoring_clients') }}:!{{ monitoring_exclude | default('monitoring_exclude') }}"
  become: true
  roles:
    - pokerops.monitoring.monitoring
  tasks:
    - name: Verify Vector install params
      when: monitoring_elasticsearch_hosts | length > 0
      block:
        - name: Verify agent location parameter
          ansible.builtin.assert:
            that: monitoring_agent_location != ""
            fail_msg: "monitoring_agent_location parameter is required"

        - name: Verify agent environment parameter
          ansible.builtin.assert:
            that: monitoring_agent_environment != ""
            fail_msg: "monitoring_agent_environment parameter is required"

        - name: Verify agent function parameter
          ansible.builtin.assert:
            that: monitoring_agent_function != ""
            fail_msg: "monitoring_agent_function parameter is required"

        - name: Verify elasticsearch username parameter
          ansible.builtin.assert:
            that: monitoring_elasticsearch_username != ""
            fail_msg: "monitoring_elasticsearch_username parameter is required"

        - name: Verify elasticsearch password parameter
          ansible.builtin.assert:
            that: monitoring_elasticsearch_password != ""
            fail_msg: "monitoring_elasticsearch_password parameter is required"

    - name: Install Vector agent
      ansible.builtin.apt:
        deb: https://packages.timber.io/vector/{{ monitoring_vector_version }}/vector_{{ monitoring_vector_version }}-1_amd64.deb

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
      when: ansible_facts.os_family == "Debian"
      changed_when: false

    - name: Install Vector dependencies
      ansible.builtin.apt:
        name: python3-ntplib
        state: present

    - name: Create Vector service override directory
      ansible.builtin.file:
        path: /etc/systemd/system/vector.service.d
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: Deploy Vector service overrides
      ansible.builtin.copy:
        dest: /etc/systemd/system/vector.service.d/vector.conf
        content: |
          [Service]
          ExecStart=
          ExecStart=-/usr/bin/vector --config-dir {{ monitoring_vector_conf_path }}
          ExecStartPre=
          ExecStartPre=-/usr/bin/vector validate --config-dir {{ monitoring_vector_conf_path }}
          ExecReload=
          ExecReload=-/usr/bin/vector validate --no-environment --config-dir {{ monitoring_vector_conf_path }}
          ExecReload=/bin/kill -HUP $MAINPID
      notify: systemd_reload

    - name: Create Vector configuration directory
      ansible.builtin.file:
        path: "{{ monitoring_vector_conf_path }}"
        state: directory
        owner: vector
        group: vector
        mode: "0750"

    - name: Create Vector log directory
      ansible.builtin.file:
        path: /var/log/vector
        state: directory
        owner: vector
        group: vector
        mode: "0755"

    - name: Drop Vector default configuration
      ansible.builtin.file:
        dest: "{{ item }}"
        state: absent
      loop:
        - "/etc/vector/vector.toml"
        - "/etc/vector/vector.yaml"
        - "{{ monitoring_vector_conf_path }}/examples"
      notify: vector_reload

    - name: Deploy Vector beat configurations
      ansible.builtin.template:
        src: beat.yaml.j2
        dest: "{{ monitoring_vector_conf_path }}/{{ beat_name }}.yaml"
        owner: vector
        group: vector
        mode: "0640"
      vars:
        vector_output_file_enable: "{{ monitoring_vector_output_file_enable }}"
        beat_name: "{{ item.name }}"
        beat_port: "{{ item.port }}"
        beat_elasticsearch_hosts: "{{ monitoring_elasticsearch_hosts }}"
        beat_elasticsearch_username: "{{ monitoring_elasticsearch_username }}"
        beat_elasticsearch_password: "{{ monitoring_elasticsearch_password }}"
        beat_elasticsearch_index: "{{ item.index }}"
      loop_control:
        label: "{{ item.name }}"
      loop: "{{ monitoring_beat_configs }}"
      notify: vector_reload

    - name: Deploy Vector ntp script
      ansible.builtin.copy:
        dest: "{{ monitoring_vector_ntp_script_path }}"
        content: |
          #!/usr/bin/env python3

          import ntplib
          import json
          from datetime import datetime, timezone
          from time import ctime

          client = ntplib.NTPClient()
          reply = client.request("time.cloudflare.com")
          print(json.dumps({
              "@timestamp": datetime.fromtimestamp(reply.tx_time, timezone.utc).isoformat(),
              "ntp_peer_address": "time.cloudflare.com",
              "ntp_peer_offset": abs(reply.offset),
              "host": {
                  "name": "{{ ansible_facts.hostname }}",
              },
              "fields": {
                  "location": "{{ monitoring_agent_location }}",
                  "environment": "{{ monitoring_agent_environment }}",
                  "function": "{{ monitoring_agent_function }}",
                  "log": {
                      "description": "ntp-drift"
                  }
              }
          }))
        owner: root
        group: root
        mode: "0755"

    - name: Deploy Vector ntp configuration
      ansible.builtin.template:
        src: ntp.yaml.j2
        dest: "{{ monitoring_vector_conf_path }}/ntp.yaml"
        owner: vector
        group: vector
        mode: "0640"
      vars:
        vector_output_file_enable: "{{ monitoring_vector_output_file_enable }}"
        vector_ntp_script_path: "{{ monitoring_vector_ntp_script_path }}"
        vector_ntp_script_interval: "{{ monitoring_vector_ntp_script_interval }}"
        vector_ntp_index: "{{ monitoring_elasticsearch_index_ntp }}"
        beat_elasticsearch_hosts: "{{ monitoring_elasticsearch_hosts }}"
        beat_elasticsearch_username: "{{ monitoring_elasticsearch_username }}"
        beat_elasticsearch_password: "{{ monitoring_elasticsearch_password }}"
        beat_elasticsearch_index: "{{ item.index }}"
      notify: vector_reload

    - name: Validate Vector configuration
      ansible.builtin.command:
        cmd: "/usr/bin/vector validate --config-dir {{ monitoring_vector_conf_path }}"
      register: vector_validate
      changed_when: false

    - name: Deploy logrotate configuration for Vector logs
      ansible.builtin.copy:
        dest: /etc/logrotate.d/vector
        content: |
          /var/log/vector/*.log {
              size {{ monitoring_vector_output_file_size }}
              rotate {{ monitoring_vector_output_file_count }}
              missingok
              notifempty
              compress
              delaycompress
              copytruncate
              create 0644 vector vector
          }
        owner: root
        group: root
        mode: "0644"

    - name: Ensure vector service is started and enabled
      ansible.builtin.service:
        name: vector
        state: started
        enabled: true

  handlers:
    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: true
      listen: systemd_reload

    - name: Vector reload
      ansible.builtin.service:
        name: vector
        state: reloaded
      listen: vector_reload
